1. You can check the state of Pods at any time with the following kubectl command:

-> $ kubectl get pods -n doit-lab-02

2. You can also permanently display the current log stream of the pod in question in your terminal using the following command:

2.1 logs of static web application (container=001-static-web-app-c)

-> $ kubectl logs -f -l k8s-app=static-web-app-advanced -n doit-lab-02 -c 001-static-web-app-c

2.2 logs of web applications sidecar (container=002-static-web-app-sidecar-c)

-> $ kubectl logs -f -l k8s-app=static-web-app-advanced -n doit-lab-02 -c 001-static-web-app-c

2.2 logs of pod's primary init container (container=000-static-web-app-advanced-init-c)

-> $ kubectl logs -f -l k8s-app=static-web-app-advanced -n doit-lab-02 -c 001-static-web-app-c

3. You can access this pod from your local environment by kubectl port-forwarding & access this web-app @localhost:8080

-> $ kubectl port-forward pod/static-web-app-advanced 8080:80 -n doit-lab-02

4. You can also jump directly into a sh-terminal of the started pod

4.1 static web application (container=001-static-web-app-c)

-> $ kubectl exec -it static-web-app-advanced -c 001-static-web-app-c -n doit-lab-02 -- sh

4.2 web applications sidecar (container=002-static-web-app-sidecar-c, will run for 60s)

-> $ kubectl exec -it static-web-app-advanced -c 002-static-web-app-sidecar-c -n doit-lab-02 -- sh

5. You can also jump directly into a sh-terminal of the started pod (second container, 002-static-web-app-sidecar-c)

-> $ kubectl exec -it static-web-app-advanced -c 002-static-web-app-sidecar-c -n doit-lab-02 -- sh

6. SSH into the node in the nodepool:
-> $ gcloud compute ssh <mynodename>

7. List containers on node:
-> $ crictl ps

8. Attach shell to container:
-> $ crictl exec -ti <containerid> sh